<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bobochang.warehouse.mapper.InStoreMapper">

    <resultMap id="BaseResultMap" type="com.bobochang.warehouse.entity.InStore">
            <id property="insId" column="ins_id" jdbcType="INTEGER"/>
            <result property="storeId" column="store_id" jdbcType="INTEGER"/>
            <result property="materialId" column="material_id" jdbcType="INTEGER"/>
            <result property="inNum" column="in_num" jdbcType="INTEGER"/>
            <result property="relativeNum" column="relative_num" jdbcType="INTEGER"/>
            <result property="price" column="price" jdbcType="DECIMAL"/>
            <result property="freight" column="freight" jdbcType="DECIMAL"/>
            <result property="carNumber" column="car_number" jdbcType="VARCHAR"/>
            <result property="contractId" column="contract_id" jdbcType="INTEGER"/>
            <result property="remarks" column="remarks" jdbcType="VARCHAR"/>
            <result property="createBy" column="create_by" jdbcType="INTEGER"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
            <result property="isIn" column="is_in" jdbcType="CHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        ins_id,store_id,material_id,
        in_num,relative_num,price,
        freight,car_number,contract_id,
        remarks,create_by,create_time,
        is_in
    </sql>
    <update id="updateInstoreById">
        update in_store set 
            relative_num = #{relativeNum},
            freight = #{freight},
            car_number = #{carNumber},
            remarks = #{remarks}
        where ins_id = #{insId}
    </update>

    <!--
 //查询入库单总行数的方法
 public int selectInStoreCount(InStore inStore)
-->
    <select id="selectInStoreCount" resultType="integer">
        select count(*)
        from in_store t1, store t2, material t3, user_info t4, supply t5
        where t1.store_id = t2.store_id and t1.material_id = t3.material_id
        and t1.create_by = t4.user_id and t1.supply_id = t5.supply_id

        <if test="storeId != null">
            and t1.store_id = #{storeId}
        </if>
        <if test="materialName != null and materialName != ''">
            and t3.material_name like concat('%', #{materialName}, '%')
        </if>
        <if test="startTime != null and startTime != ''">
            and t1.create_time &gt;= #{startTime}
        </if>
        <if test="endTime != null and endTime != ''">
            and t1.create_time &lt;= #{endTime}
        </if>
        <if test="supplyId != null and supplyId != ''">
            and t1.supply_id &lt;= #{supplyId}
        </if>
    </select>

    <!--
     //分页查询入库单的方法
     public List<InStore> selectInStorePage(@Param("page") Page page, @Param("inStore") InStore inStore)
    -->
    <select id="selectInStorePage" resultType="com.bobochang.warehouse.entity.InStore">
        select t1.*, t2.store_name, t3.material_name,
        t4.user_code, t5.supply_name, t6.contract_name
        from in_store t1, store t2, material t3, user_info t4, supply t5, contract t6
        where t1.store_id = t2.store_id and t1.material_id = t3.material_id
        and t1.create_by = t4.user_id and t1.supply_id = t5.supply_id
        and t1.contract_id = t6.contract_id

        <if test="inStore.storeId != null">
            and t1.store_id = #{inStore.storeId}
        </if>
        <if test="inStore.materialName != null and inStore.materialName != ''">
            and t3.material_name like concat('%', #{inStore.materialName}, '%')
        </if>
        <if test="inStore.startTime != null and inStore.startTime != ''">
            and t1.create_time &gt;= #{inStore.startTime}
        </if>
        <if test="inStore.endTime != null and inStore.endTime != ''">
            and t1.create_time &lt;= #{inStore.endTime}
        </if>
        <if test="inStore.supplyId != null and inStore.supplyId != ''">
            and t1.supply_id &lt;= #{inStore.supplyId}
        </if>
        <if test="inStore.contractId != null and inStore.contractId != ''">
            and t1.contract_id &lt;= #{inStore.contractId}
        </if>
        order by t1.create_time desc
        limit #{page.limitIndex}, #{page.pageSize}
    </select>

    <!--
      //添加入库单的方法
      public int insertInStore(InStore)
    -->
    <insert id="insertInStore">
        insert into in_store
        values (null, #{storeId}, #{materialId}, #{inNum}, null, #{price}, null, null, #{contractId}, #{supplyId}, null, #{createBy}, now(), 0)
    </insert>

    <!--
      //根据id将入库单状态改为已入库的方法
      public int updateIsInById(Integer insId)
    -->
    <update id="updateIsInById">
        update in_store
        set is_in = 1
        where ins_id = #{insId}
    </update>
</mapper>

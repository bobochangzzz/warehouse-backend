<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bobochang.warehouse.mapper.ContractMapper">

    <resultMap id="BaseResultMap" type="com.bobochang.warehouse.entity.Contract">
            <id property="contractId" column="contract_id" jdbcType="INTEGER"/>
            <result property="contractName" column="contract_name" jdbcType="VARCHAR"/>
            <result property="caterialId" column="caterial_id" jdbcType="INTEGER"/>
            <result property="startTime" column="start_time" jdbcType="TIMESTAMP"/>
            <result property="endTime" column="end_time" jdbcType="TIMESTAMP"/>
            <result property="productMaterialId" column="product_material_id" jdbcType="INTEGER"/>
            <result property="contractState" column="contract_state" jdbcType="CHAR"/>
            <result property="files" column="files" jdbcType="VARCHAR"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
            <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        contract_id,contract_name,caterial_id,
        start_time,end_time,product_material_id,
        contract_state,files,create_time,
        update_time
    </sql>


    <!--
        // 根据合同 id 查询合同的方法
        public Contract findContractById(Integer contractId)
    -->
    <select id="findContractById" resultType="com.bobochang.warehouse.entity.Contract">
        select *
        from contract
        where contract_id = #{contractId}
    </select>

    <!--
        // 根据合同名称查询合同
        public Contract findContractByName(String contractName)
    -->
    <select id="findContractByName" resultType="com.bobochang.warehouse.entity.Contract">
        select *
        from contract
        where contract_name = #{contractName}
    </select>

    <!--
        // 查询合同总行数的方法
        public int selectContractCount(Contract contract)
    -->
    <select id="selectContractCount" resultType="integer">
        select count(*) from contract
        <where>
            <if test="contractState != null and contractState != ''">
                and contract_state = #{contractState}
            </if>
        </where>
    </select>

    <!--
        // 分页查询合同
        public List<Contract> selectContractPage(@Param("page")Page page, @Param("contract")Contract contract);
    -->
    <select id="selectContractPage" resultType="com.bobochang.warehouse.entity.Contract">
        select t1.*, t2.product_name from contract t1 left join product t2
        on t1.product_id = t2.product_id
        <where>
            <if test="contract.contractName != null and contract.contractName != ''">
                and t1.contract_name like concat('%', #{contract.contractName}, '%')
            </if>
            <if test="contract.contractState != null and contract.contractState != ''">
                and t1.contract_state like concat('%', #{contract.contractState}, '%')
            </if>
            <if test="contract.contractId != null and contract.contractId != ''">
                and t1.contract_id = #{contract.contractId}
            </if>
        </where>
        limit #{page.limitIndex}, #{page.pageSize}
    </select>
    <select id="selectAllContract" resultType="com.bobochang.warehouse.entity.Contract">
        select * from contract
    </select>

    <!--
        // 添加合同
        public int insertContract(Contract contract);
    -->
    <insert id="insertContract">
        insert into contract
        (contract_name, caterial_id, contract_state, if_purchase, product_id, product_num,start_time, end_time, product_material_id, files, create_time, update_time, work_region)
        values (#{contractName}, #{caterialId}, 0, #{ifPurchase}, #{productId}, #{productNum}, #{startTime}, #{endTime}, #{productMaterialId}, #{files}, now(), now(), #{workRegion})
    </insert>

    <!--
        // 根据合同 id 修改合同状态
        public int updateContractState(Contract contract);
    -->
    <update id="updateContractState">
        update contract
        set contract_state = #{contractState},
            update_time=now()
        where contract_id = #{contractId}
    </update>

    <!--
        // 根据合同 id 修改合同昵称
        public int updateNameById(Contract contract);
    -->
    <update id="updateContractById">
        update contract
        set contract_name=#{contractName},
            files=#{files},
            update_time=now(),
            product_id=#{productId},
            product_num=#{productNum},
            start_time=#{startTime},
            end_time=#{endTime},
            if_purchase=#{ifPurchase},
            work_region=#{workRegion}
        where contract_id = #{contractId}
    </update>
    
    <!--
        修改合同的采购状态
    -->
    <update id="updateContractIfPurchase">
        update contract
        set if_purchase=#{ifPurchase}
        where contract_id = #{contractId}
    </update>
</mapper>
